import { type NextPage } from "next";

import * as grpc from "@grpc/grpc-js";
import Head from "next/head";
import Link from "next/link";


import { api } from "@/utils/api";
// import { GreeterClient } from "@/proto/helloworld_grpc_pb";
// import { HelloRequest } from "@/proto/helloworld_pb";
import { SubscriptionServiceClient } from "@/proto/subscription_grpc_pb";
import { SubscriptionRequest, SubscriptionResponse } from "@/proto/subscription_pb";
import { useEffect } from "react";
import {GreeterClient, HelloRequest} from "@/proto/helloworld_grpc_web_pb"
import dynamic from "next/dynamic";

// import { Hello } from '../components/Hello';

const DynamicMyComponent = dynamic(() => import('../components/Hello').then((c) => c.Hello), {
  ssr: false
});

const Home: NextPage<{ data: string }> = ({ }) => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });


  // useEffect(() => {



  //   const req = new SubscriptionRequest()
  //   req.setTopic("Hi beer")
  //   const stream = subClient.subscribe(req)

  //   stream.on('data', (message: SubscriptionResponse) => {
  //     console.log(`Received message from server: ${message.getMessage()}`);
  //   });

  //   stream.on('end', () => {
  //     console.log('Server closed the stream');
  //   });
  // }, [])

  // useEffect(() => {
  //   stream.on('data', (message: SubscriptionResponse) => {
  //     console.log(`Received message from server: ${message.getMessage()}`);
  //   });

  //   stream.on('end', () => {
  //     console.log('Server closed the stream');
  //   });
  // }, [])

  // const [val, setVal] = useState("")

  // useEffect(() => {
  //   const req = new HelloRequest()
  //   req.setName("Beer")
  //   greeterClient.sayHello(req, (e, res) => {
  //     setVal(res.getMessage())
  //     console.log(res)
  //     console.log(e)
  //   })
  // }, [])

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main >
        Demo
        <DynamicMyComponent />
      </main>
    </>
  );
};

export default Home;


// export async function getServerSideProps() {
//   const subClient = new SubscriptionServiceClient('127.0.0.1:50051', grpc.credentials.createInsecure());

//   const req = new SubscriptionRequest()
//   req.setTopic("Hi beer")
//   const stream = subClient.subscribe(req)

//   stream.on('data', (message: SubscriptionResponse) => {
//     console.log(`Received message from server: ${message.getMessage()}`);
//   });

//   stream.on('end', () => {
//     console.log('Server closed the stream');
//   });


//   // console.log(msg)

//   return {
//     props: {
//       data: "hi",
//       // stream:stream 
//     }
//   }
// }

// export async function getServerSideProps() {
//   const greeterClient = new GreeterClient('127.0.0.1:50051', grpc.credentials.createInsecure());
//     const req = new HelloRequest()
//     req.setName("Beer")
//     greeterClient.sayHello(req, (e, res) => {
//       console.log(res)
//       console.log(res.getMessage())
//       console.log(e)
//     })
//     // console.log("test")
//   return {
//     props: {
//       data: "hi"
//     }, // will be passed to the page component as props
//   }
// }